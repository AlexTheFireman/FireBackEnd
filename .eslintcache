[{"C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\index.js":"1","C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\serviceWorker.js":"2","C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\App.js":"3","C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\File.js":"4","C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\MyNavbar.js":"5","C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\FileList.js":"6","C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\FilteredTable.js":"7","C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\Table.js":"8","C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\ReactSelect.js":"9"},{"size":496,"mtime":1598028893218,"results":"10","hashOfConfig":"11"},{"size":5139,"mtime":1602587372961,"results":"12","hashOfConfig":"11"},{"size":745,"mtime":1608743869438,"results":"13","hashOfConfig":"11"},{"size":1473,"mtime":1608845950472,"results":"14","hashOfConfig":"11"},{"size":577,"mtime":1608743869442,"results":"15","hashOfConfig":"11"},{"size":1635,"mtime":1602587372995,"results":"16","hashOfConfig":"11"},{"size":3565,"mtime":1608743869441,"results":"17","hashOfConfig":"11"},{"size":3175,"mtime":1608743869445,"results":"18","hashOfConfig":"11"},{"size":25388,"mtime":1608743869444,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"xlov9x",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\index.js",[],["40","41"],"C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\serviceWorker.js",[],"C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\App.js",[],"C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\File.js",[],"C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\MyNavbar.js",[],"C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\FileList.js",[],"C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\FilteredTable.js",["42"],"import React, { useState, useEffect } from 'react';\nimport Table from \"./Table\";\nimport ReactSelect from \"./ReactSelect\";\n\nexport default function SimplestFilteredTable (props) {\n\n    const [fires, setFires] = useState ([]);\n    const { name, fireStation, message, district, destination, whereWasTheFire, rescueWorks,\n        fireChiefRank, amountOfSmokeGroups, extinguishingAgents, usingHydrants, locality,\n        fireRank }  = props.match.params;\n    const objectWithProperties = { fireStation, message, district, destination, whereWasTheFire, rescueWorks,\n        fireChiefRank, amountOfSmokeGroups, extinguishingAgents, usingHydrants, locality, fireRank };\n    const encoded = encodeURI(`/api/get/${name}`);\n    useEffect((api) => {\n        if (checkProperties(objectWithProperties)) {\n            fetch(encoded, {\n                method: \"POST\",\n                body: JSON.stringify({\n                    fireStation,\n                    message,\n                    district,\n                    destination,\n                    whereWasTheFire,\n                    rescueWorks,\n                    fireChiefRank,\n                    amountOfSmokeGroups,\n                    extinguishingAgents,\n                    usingHydrants,\n                    locality,\n                    fireRank\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    setFires(data);\n                });\n            fetchTable({setFires, name})\n        } else {\n            fetch(encoded)\n                .then(response => response.json())\n                .then(data => {\n                    setFires(data);\n                });\n        }\n    }, [name]);\n\n    const result = <h3>Итого выездов: {fires.length}</h3>;\n    return (\n        <>\n            <div className=\"box\">\n                <div className=\"box1\">\n                    <ReactSelect onSubmit={(state) => fetchTable({setFires, name, ...state})}/>\n                </div>\n                <div className=\"box2\" >\n                    {result}\n                </div>\n            </div>\n            <table className=\"table-sm table-hover table-striped\">\n                <Table fires = {fires}/>\n\n            </table>\n        </>\n    )\n}\n\nconst fetchTable = ({fireStation = \"\", message = \"\", district = \"\", destination = \"\", whereWasTheFire = \"\",\n                        rescueWorks = \"\", fireChiefRank = \"\", amountOfSmokeGroups = \"\",\n                        extinguishingAgents = \"\", usingHydrants = \"\", locality = \"\", fireRank = \"\",\n                        name, setFires}) => {\n    const encoded = encodeURI(`/api/get/${name}`);\n    fetch(encoded, {\n        method: \"POST\",\n        body: JSON.stringify({\n            fireStation,\n            message,\n            district,\n            destination,\n            whereWasTheFire,\n            rescueWorks,\n            fireChiefRank,\n            amountOfSmokeGroups,\n            extinguishingAgents,\n            usingHydrants,\n            locality,\n            fireRank\n        }),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n    })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data.length);\n            setFires(data);\n        });\n\n}\n\nfunction checkProperties(obj) {\n    for(let key in obj){\n        if (obj[key] !== null && obj[key] !== '')\n            return false\n    }\n}\n\n","C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\Table.js",[],"C:\\Users\\Alex\\IdeaProjects\\FireFrontEnd\\src\\ReactSelect.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":48,"column":8,"nodeType":"49","endLine":48,"endColumn":14,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'amountOfSmokeGroups', 'destination', 'district', 'encoded', 'extinguishingAgents', 'fireChiefRank', 'fireRank', 'fireStation', 'locality', 'message', 'objectWithProperties', 'rescueWorks', 'usingHydrants', and 'whereWasTheFire'. Either include them or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [amountOfSmokeGroups, destination, district, encoded, extinguishingAgents, fireChiefRank, fireRank, fireStation, locality, message, name, objectWithProperties, rescueWorks, usingHydrants, whereWasTheFire]",{"range":"56","text":"57"},[1827,1833],"[amountOfSmokeGroups, destination, district, encoded, extinguishingAgents, fireChiefRank, fireRank, fireStation, locality, message, name, objectWithProperties, rescueWorks, usingHydrants, whereWasTheFire]"]